{"version":3,"sources":["components/task_3/FriendListItem/FriendListItem.module.css","components/task_1/Profile/Profile.module.css","components/task_1/Stat/Stat.module.css","components/task_2/StatList/Statistic.module.css","components/task_2/StatItem/StatItem.module.css","components/task_4/TransList/transList.module.css","components/task_3/FriendList/FriendList.module.css","components/task_4/TransItem/transItem.module.css","components/task_1/Stat/Stat.js","components/task_1/Profile/Profile.js","components/task_2/randomColor.js","components/task_2/StatItem/StatItem.js","components/task_2/StatList/Statistic.js","components/task_3/FriendListItem/FriendListItem.js","components/task_3/FriendList/FriendList.js","components/task_4/TransItem/TransItem.js","components/task_4/TransList/TransList.js","index.js"],"names":["module","exports","Stat","label","quantity","className","styles","stat","Profile","user","profile","description","src","avatar","alt","name","tag","stats","followers","location","Object","keys","values","randomColor","Math","floor","random","StatItem","percentage","item","style","backgroundColor","Statistic","title","statistics","statList","map","index","key","defaultProps","FriendListItem","spanClass","isOnline","onLine","offLine","FriendList","friends","friendList","id","TransItem","type","amount","currency","trow","TransList","transactions","transactionHistory","thead","ReactDOM","render","statisticsInfo","friendsInfo","transactionsInfo","document","getElementById"],"mappings":"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","file":"static/js/main.987534a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3NKwO\",\"avatar\":\"FriendListItem_avatar__311GI\",\"onLine\":\"FriendListItem_onLine__2-Pff\",\"offLine\":\"FriendListItem_offLine__1_9he FriendListItem_onLine__2-Pff\",\"name\":\"FriendListItem_name__3qhsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__7w6SS\",\"description\":\"Profile_description__1VmLL\",\"tag\":\"Profile_tag__tGxtm\",\"location\":\"Profile_location__3Z9Jk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"Stat_stat__2CiN0\",\"label\":\"Stat_label__3aAkO\",\"quantity\":\"Stat_quantity__1dUC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__1snJn\",\"title\":\"Statistic_title__yRG1o\",\"statList\":\"Statistic_statList__1ATCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatItem_item__2IRJX\",\"label\":\"StatItem_label__1DLS9\",\"percentage\":\"StatItem_percentage__2t7up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transList_transactionHistory__2ZtaX\",\"thead\":\"transList_thead__1qIXw\",\"trow\":\"transList_trow__oGE5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__QeWzt\",\"avatar\":\"FriendList_avatar__3p_14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trow\":\"transItem_trow__2gNVH\"};","import React from \"react\";\r\nimport styles from \"./Stat.module.css\";\r\n\r\nexport const Stat = ({ label, quantity }) => (\r\n  <li className={styles.stat}>\r\n    <span className={styles.label}>{label}</span>\r\n    <span className={styles.quantity}>{quantity}</span>\r\n  </li>\r\n);\r\n","import React from \"react\";\r\nimport { Stat } from \"../Stat/Stat\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ user }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={user.avatar} alt={user.name} />\r\n      <p className=\"name\">{user.name}</p>\r\n      <p className={styles.tag}>@{user.stats.followers}</p>\r\n      <p className={styles.location}>Salvador, Brasil</p>\r\n    </div>\r\n    <ul className=\"stats\">\r\n      <Stat\r\n        label={Object.keys(user.stats)[0]}\r\n        quantity={Object.values(user.stats)[0]}\r\n      />\r\n      <Stat\r\n        label={Object.keys(user.stats)[1]}\r\n        quantity={Object.values(user.stats)[1]}\r\n      />\r\n      <Stat\r\n        label={Object.keys(user.stats)[2]}\r\n        quantity={Object.values(user.stats)[2]}\r\n      />\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Profile;\r\n","const randomColor = () => {\r\n  return `rgb(${Math.floor(Math.random() * 255)}, ${Math.floor(\r\n    Math.random() * 255\r\n  )}, ${Math.floor(Math.random() * 255)})`;\r\n};\r\nexport default randomColor;\r\n","import React from \"react\";\r\nimport styles from \"./StatItem.module.css\"\r\nimport randomColor from \"../randomColor\";\r\n\r\nconst StatItem = ({ label, percentage }) => (\r\n  <li className={styles.item} style={{ backgroundColor: randomColor() }}>\r\n    <span className={styles.label}>{label}</span>\r\n    <span className={styles.percentage}>{percentage}%</span>\r\n  </li>\r\n);\r\n\r\nexport default StatItem;\r\n","import React from \"react\";\r\nimport styles from \"./Statistic.module.css\";\r\n\r\nimport StatItem from \"../StatItem/StatItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistic = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    <ul className={styles.statList}>\r\n      {stats.map((item, index) => (\r\n        <StatItem label={item.label} percentage={item.percentage} key={index}/>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistic.defaultProps = {\r\n  title: \"Upload stats\"\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport styles from \"./FriendListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  let spanClass = isOnline ? styles.onLine : styles.offLine;\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={spanClass}></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar:\r\n    \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\",\r\n  isOnline: false,\r\n  name: \"Name\"\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map(item => (\r\n      <FriendListItem\r\n        avatar={item.avatar}\r\n        name={item.name}\r\n        isOnline={item.isOnline}\r\n        key={item.id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport styles from \"./transItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransItem = ({ type, amount, currency }) => (\r\n  <tr className={styles.trow}>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </tr>\r\n);\r\n\r\nTransItem.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TransItem;\r\n","import React from \"react\";\r\nimport TransItem from \"../TransItem/TransItem\";\r\nimport styles from \"./transList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransList = ({ transactions }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead className={styles.thead}>\r\n      <tr className={styles.trow}>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {transactions.map(item => (\r\n          <TransItem\r\n            key={item.id}\r\n            type={item.type}\r\n            amount={item.amount}\r\n            currency={item.currency}\r\n          />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransList.propTypes = {\r\n  transactions: PropTypes.array.isRequired\r\n};\r\n\r\nexport default TransList;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//* ------------profile-----------*//\nimport Profile from \"./components/task_1/Profile/Profile\";\nimport user from \"./components/task_1/user.json\";\n//* ------------statistic-----------*//\nimport Statistic from \"./components/task_2/StatList/Statistic\";\nimport statisticsInfo from \"./components/task_2/statistical-data.json\";\n//* ------------friendLsit-----------*//\nimport FriendList from \"./components/task_3/FriendList/FriendList\";\nimport friendsInfo from \"./components/task_3/friendList.json\";\n//* ------------transactions-----------*//\nimport TransList from \"./components/task_4/TransList/TransList\";\nimport transactionsInfo from \"./components/task_4/transaction.json\";\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Statistic stats={statisticsInfo} />\n    <FriendList friends={friendsInfo} />\n    <TransList transactions={transactionsInfo} />\n  </>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}